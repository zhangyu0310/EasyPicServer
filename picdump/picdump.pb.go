// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: picdump.proto

package picdump

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pic     []byte `protobuf:"bytes,1,opt,name=pic,proto3" json:"pic,omitempty"`
	PicName string `protobuf:"bytes,2,opt,name=picName,proto3" json:"picName,omitempty"`
}

func (x *PicRequest) Reset() {
	*x = PicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_picdump_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PicRequest) ProtoMessage() {}

func (x *PicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_picdump_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PicRequest.ProtoReflect.Descriptor instead.
func (*PicRequest) Descriptor() ([]byte, []int) {
	return file_picdump_proto_rawDescGZIP(), []int{0}
}

func (x *PicRequest) GetPic() []byte {
	if x != nil {
		return x.Pic
	}
	return nil
}

func (x *PicRequest) GetPicName() string {
	if x != nil {
		return x.PicName
	}
	return ""
}

type PicReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PicReply) Reset() {
	*x = PicReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_picdump_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PicReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PicReply) ProtoMessage() {}

func (x *PicReply) ProtoReflect() protoreflect.Message {
	mi := &file_picdump_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PicReply.ProtoReflect.Descriptor instead.
func (*PicReply) Descriptor() ([]byte, []int) {
	return file_picdump_proto_rawDescGZIP(), []int{1}
}

func (x *PicReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_picdump_proto protoreflect.FileDescriptor

var file_picdump_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x69, 0x63, 0x64, 0x75, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x69, 0x63, 0x64, 0x75, 0x6d, 0x70, 0x22, 0x38, 0x0a, 0x0a, 0x50, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x24, 0x0a, 0x08, 0x50, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x3e, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x69, 0x63, 0x12, 0x13,
	0x2e, 0x70, 0x69, 0x63, 0x64, 0x75, 0x6d, 0x70, 0x2e, 0x50, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x69, 0x63, 0x64, 0x75, 0x6d, 0x70, 0x2e, 0x50, 0x69,
	0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2e, 0x2f, 0x70,
	0x69, 0x63, 0x64, 0x75, 0x6d, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_picdump_proto_rawDescOnce sync.Once
	file_picdump_proto_rawDescData = file_picdump_proto_rawDesc
)

func file_picdump_proto_rawDescGZIP() []byte {
	file_picdump_proto_rawDescOnce.Do(func() {
		file_picdump_proto_rawDescData = protoimpl.X.CompressGZIP(file_picdump_proto_rawDescData)
	})
	return file_picdump_proto_rawDescData
}

var file_picdump_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_picdump_proto_goTypes = []interface{}{
	(*PicRequest)(nil), // 0: picdump.PicRequest
	(*PicReply)(nil),   // 1: picdump.PicReply
}
var file_picdump_proto_depIdxs = []int32{
	0, // 0: picdump.Courier.SendPic:input_type -> picdump.PicRequest
	1, // 1: picdump.Courier.SendPic:output_type -> picdump.PicReply
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_picdump_proto_init() }
func file_picdump_proto_init() {
	if File_picdump_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_picdump_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_picdump_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PicReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_picdump_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_picdump_proto_goTypes,
		DependencyIndexes: file_picdump_proto_depIdxs,
		MessageInfos:      file_picdump_proto_msgTypes,
	}.Build()
	File_picdump_proto = out.File
	file_picdump_proto_rawDesc = nil
	file_picdump_proto_goTypes = nil
	file_picdump_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CourierClient is the client API for Courier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CourierClient interface {
	SendPic(ctx context.Context, in *PicRequest, opts ...grpc.CallOption) (*PicReply, error)
}

type courierClient struct {
	cc grpc.ClientConnInterface
}

func NewCourierClient(cc grpc.ClientConnInterface) CourierClient {
	return &courierClient{cc}
}

func (c *courierClient) SendPic(ctx context.Context, in *PicRequest, opts ...grpc.CallOption) (*PicReply, error) {
	out := new(PicReply)
	err := c.cc.Invoke(ctx, "/picdump.Courier/SendPic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CourierServer is the server API for Courier service.
type CourierServer interface {
	SendPic(context.Context, *PicRequest) (*PicReply, error)
}

// UnimplementedCourierServer can be embedded to have forward compatible implementations.
type UnimplementedCourierServer struct {
}

func (*UnimplementedCourierServer) SendPic(context.Context, *PicRequest) (*PicReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendPic not implemented")
}

func RegisterCourierServer(s *grpc.Server, srv CourierServer) {
	s.RegisterService(&_Courier_serviceDesc, srv)
}

func _Courier_SendPic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierServer).SendPic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/picdump.Courier/SendPic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierServer).SendPic(ctx, req.(*PicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Courier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "picdump.Courier",
	HandlerType: (*CourierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendPic",
			Handler:    _Courier_SendPic_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "picdump.proto",
}
